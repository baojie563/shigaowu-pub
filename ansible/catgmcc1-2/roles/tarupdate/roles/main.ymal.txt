- name: assure cache dir exists
  file:
    path: "{{module_cache_dir}}"
    state: directory

- name: assure install dir exists
  file:
    path: "{{module_install_dir}}"
    state: directory

- name: check install status
  shell: ls {{module_install_dir}}/{{module_name}}
  ignore_errors: yes
  register: installed
  
- name: check backup status
  shell: ls {{module_install_dir}}/{{module_name}}-{{version}}-pre
  ignore_errors: yes
  register: backup
  
- name: clean {{module_name}} cache
  file:
    path: "{{module_cache_file}}"
    state: absent
  when: not (rollback | bool)

- name: download {{module_name}}
  get_url:
    url: "{{module_remote_file}}"
    dest: "{{module_cache_file}}"
    url_username: gd-fm-ifdis-eastcom
    url_password: If-0427@Dis
  when: not (rollback | bool)
  
- name: stop {{module_name}}
  shell: sh -lc "./app stop"
  args:
    chdir: "{{module_install_dir}}/{{module_name}}/bin"
  ignore_errors: yes
  when: installed | succeeded

- name: backup {{module_name}}
  shell: mv {{module_name}} {{module_name}}-{{version}}-pre
  args: 
    chdir: "{{module_install_dir}}"
  when: (not rollback) and (backup | failed)

- name: clean {{module_name}}
  file: 
    path: "{{module_install_dir}}/{{module_name}}"
    state: absent
  when: installed | succeeded
  
- name: install {{module_name}}
  unarchive:
    src: "{{module_cache_file}}"
    dest: "{{module_install_dir}}"
    remote_src: true
  when: not (rollback | bool)

- name: rollback {{module_name}}
  shell: mv {{module_name}}-{{version}}-pre {{module_name}}
  args:
    chdir: "{{module_install_dir}}"
  when: rollback | bool
  
- name: start {{module_name}}
  shell: "{{item}}"
  args: 
    chdir: "{{module_install_dir}}/{{module_name}}/bin"
  with_items:
    - sh -lc "chmod +x * && ./app start"
    - sh -lc "./app status | grep 'is running'"
